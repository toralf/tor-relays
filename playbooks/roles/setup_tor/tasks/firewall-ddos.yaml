---
- name: Install or update software for DDoS solution
  ansible.builtin.apt:
    name:
      - ipset
      - jq

- name: Allow Prometheus by DDoS
  when: metrics_port and prometheus_server
  ansible.builtin.set_fact:
    ddos_allow_prometheus: 'ADD_REMOTE_SERVICES="{{ prometheus_server }}>{{ metrics_port }}"'

- name: Secure bridge by DDoS
  when: firewall_use_ddos and bridge_distribution
  ansible.builtin.set_fact:
    ddos_add_bridge_v4: 'CONFIGURED_RELAYS="{{ ansible_facts.default_ipv4.address }}:{{ tor_port }}"'
    ddos_add_bridge_v6: 'CONFIGURED_RELAYS6="[{{ ansible_facts.default_ipv6.address }}]:{{ tor_port }}"'

- name: Download DDoS solution
  retries: 3
  ansible.builtin.get_url:
    url: "https://github.com/toralf/torutils/raw/main/{{ item }}"
    dest: "/root/{{ item }}"
    mode: "0744"
    force: true
  with_items:
    - ipv4-rules.sh
    - ipv6-rules.sh
  notify: "Restart DDoS"

# it might be stopped manually
- name: Check if DDoS is up
  changed_when: _ddos_up.rc != 0
  failed_when: false
  ansible.builtin.shell:
    cmd: |-
      set -euf

      ./ipv4-rules.sh | grep -q "DDoS IPv4"
      ./ipv6-rules.sh | grep -q "DDoS IPv6"
    executable: /bin/bash
  register: _ddos_up
  notify: "Restart DDoS"

- name: Ensure that DDoS is up
  ansible.builtin.meta: flush_handlers

- name: Create DDoS cron job to start DDoS after reboot
  ansible.builtin.cron:
    name: "start firewall"
    special_time: reboot
    job: >-
      {{ ddos_allow_prometheus }} {{ ddos_add_bridge_v4 }} /root/ipv4-rules.sh start;
      {{ ddos_add_bridge_v6 }} /root/ipv6-rules.sh start
  notify: "Restart DDoS"

- name: Create DDoS cron job to save ipsets
  ansible.builtin.cron:
    name: "save ipset"
    special_time: hourly
    job: >-
      /root/ipv4-rules.sh save;
      /root/ipv6-rules.sh save

- name: Create DDoS cron job to update Tor authority ip addresses
  ansible.builtin.cron:
    name: "Tor authority ip addresses update"
    special_time: daily
    job: >-
      /root/ipv4-rules.sh update;
      /root/ipv6-rules.sh update

- name: Remove base firewall script
  ansible.builtin.file:
    path: "/root/firewall-ip{{ item }}.sh"
    state: absent
  with_items:
    - "v4"
    - "v6"

- name: Remove iptables state
  ansible.builtin.file:
    path: "/etc/iptables/rules.{{ item }}"
    state: absent
  with_items:
    - "v4"
    - "v6"

- name: Remove persistent iptables package
  ansible.builtin.apt:
    name:
      - iptables-persistent
    state: absent
