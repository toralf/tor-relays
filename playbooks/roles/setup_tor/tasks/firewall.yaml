---
- name: DDoS of obfs4 port
  changed_when: _ddos_rule.stderr is search("Bad rule")
  vars:
    _ipv4_cmd: "INPUT -p tcp --dst {{ ansible_facts.default_ipv4.address }} --dport {{ obfs4_port }} --syn -m hashlimit --hashlimit-mode srcip,dstport --hashlimit-srcmask 32 --hashlimit-name tor-ddos-{{ obfs4_port }}  --hashlimit-above 10/minute --hashlimit-burst 1 --hashlimit-htable-expire {{ 2 * 60 * 1000 }} -j DROP"
    _ipv6_cmd: "INPUT -p tcp --dst {{ ansible_facts.default_ipv6.address }} --dport {{ obfs4_port }} --syn -m hashlimit --hashlimit-mode srcip,dstport --hashlimit-srcmask 80 --hashlimit-name tor-ddos6-{{ obfs4_port }} --hashlimit-above 10/minute --hashlimit-burst 1 --hashlimit-htable-expire {{ 2 * 60 * 1000 }} -j DROP"
  ansible.builtin.shell:
    cmd: |
      set -e

      iptables  -C {{ _ipv4_cmd }} || iptables  -A {{ _ipv4_cmd }}
      ip6tables -C {{ _ipv6_cmd }} || ip6tables -A {{ _ipv6_cmd }}
    executable: /bin/bash
  register: _ddos_rule

- name: ACCEPT TCP to obfs4 port
  ansible.builtin.iptables:
    ip_version: "{{ 'ip' + item }}"
    chain: INPUT
    table: filter
    protocol: tcp
    destination_port: "{{ obfs4_port }}"
    syn: match
    jump: ACCEPT
  with_items:
    - "v4"
    - "v6"
  register: _firewall

- name: Prereoute incoming ipv6 traffic
  when: ansible_facts.default_ipv6.prefix != "128"
  module_defaults:
    ansible.builtin.iptables:
      ip_version: ipv6
      chain: PREROUTING
      table: nat
      destination: "! {{ ansible_facts.default_ipv6.address }}"
      to_destination: "{{ ansible_facts.default_ipv6.address }}"
      jump: DNAT
  block:
    - name: DNAT TCP v6 except obfs4 port
      ansible.builtin.iptables:
        protocol: tcp
        destination_ports: "1:{{ obfs4_port | int - 1 }},{{ obfs4_port | int + 1 }}:65535"

    - name: DNAT non-TCP v6
      ansible.builtin.iptables:
        protocol: "{{ item }}"
      with_items:
        - ipv6-icmp
        - udp
        - udplite

- name: Save iptables state
  community.general.iptables_state:
    ip_version: "{{ 'ip' + item }}"
    state: saved
    path: "{{ '/etc/iptables/rules.' + item }}"
  with_items:
    - "v4"
    - "v6"
  when: _firewall.changed
