---
- name: DDoS of obfs4 port
  vars:
    _max: "{{ (bridge_distribution | length > 0) | ternary(3, 9) }}"
  changed_when: _ddos_obfs4_rules.stdout_lines | length > 0
  ansible.builtin.shell:
    cmd: |
      set -euf

      if ! {{ item | regex_replace(' --xxx ', ' -C ') }} 2>/dev/null; then
        {{ item | regex_replace(' --xxx ', ' -v -A ') }}
      fi
    executable: /bin/bash
  register: _ddos_obfs4_rules
  with_items:
    - "iptables  --xxx INPUT -p tcp --dst {{ ansible_facts.default_ipv4.address }} --dport {{ tor_port }} --syn -m hashlimit --hashlimit-mode srcip,dstport --hashlimit-srcmask 32 --hashlimit-name tor-ddos  --hashlimit-above {{ _max }}/minute --hashlimit-burst 1 --hashlimit-htable-expire {{ 2 * 60 * 1000 }} -j DROP"
    - "ip6tables --xxx INPUT -p tcp --dst {{ ansible_facts.default_ipv6.address }} --dport {{ tor_port }} --syn -m hashlimit --hashlimit-mode srcip,dstport --hashlimit-srcmask 80 --hashlimit-name tor-ddos6 --hashlimit-above {{ _max }}/minute --hashlimit-burst 1 --hashlimit-htable-expire {{ 2 * 60 * 1000 }} -j DROP"
    - "iptables  --xxx INPUT -p tcp --dst {{ ansible_facts.default_ipv4.address }} --dport {{ tor_port }} --syn -m connlimit --connlimit-mask 32 --connlimit-above {{ _max }} -j DROP"
    - "ip6tables --xxx INPUT -p tcp --dst {{ ansible_facts.default_ipv6.address }} --dport {{ tor_port }} --syn -m connlimit --connlimit-mask 80 --connlimit-above {{ _max }} -j DROP"

- name: ACCEPT TCP to obfs4 port
  ansible.builtin.iptables:
    ip_version: "ip{{ item }}"
    chain: INPUT
    table: filter
    protocol: tcp
    destination: "{{ (item == 'v4') | ternary(ansible_facts.default_ipv4.address, ansible_facts.default_ipv6.address) }}"
    destination_port: "{{ tor_port }}"
    syn: match
    jump: ACCEPT
  with_items:
    - "v4"
    - "v6"

- name: Prereoute incoming ipv6 traffic
  when: ansible_facts.default_ipv6.prefix != "128"
  module_defaults:
    ansible.builtin.iptables:
      ip_version: ipv6
      chain: PREROUTING
      table: nat
      destination: "! {{ ansible_facts.default_ipv6.address }}"
      to_destination: "{{ ansible_facts.default_ipv6.address }}"
      jump: DNAT
  block:
    - name: DNAT TCP v6 except obfs4 port
      ansible.builtin.iptables:
        protocol: tcp
        destination_ports: "1:{{ tor_port | int - 1 }},{{ tor_port | int + 1 }}:65535"

    - name: DNAT non-TCP v6
      ansible.builtin.iptables:
        protocol: "{{ item }}"
      with_items:
        - ipv6-icmp
        - udp
        - udplite

- name: Save iptables state of Tor
  community.general.iptables_state:
    ip_version: "ip{{ item }}"
    state: saved
    path: "{{ '/etc/iptables/rules.' + item }}"
  with_items:
    - "v4"
    - "v6"
