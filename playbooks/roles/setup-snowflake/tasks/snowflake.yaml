---
# inspired by https://github.com/nvjacobo/snowflake/blob/main/tasks/debian-bookworm.yml

- name: Install or update software
  ansible.builtin.apt:
    update_cache: true
    name:
      - git
      - "{{ snowflake_go_package }}"

- name: Add the snowflake user
  ansible.builtin.user:
    name: snowflake

- name: Create Ansible tmp dir for user snowflake
  ansible.builtin.file:
    path: /home/snowflake/.ansible/tmp
    state: directory
    owner: snowflake
    group: snowflake
    mode: "0700"

- name: Clone or update repo
  become: true
  become_user: snowflake
  vars:
    __version: "{{ (ansible_facts.hostname in snowflake_patched_systems) | ternary(snowflake_patch_base, snowflake_git_version) }}"
  ansible.builtin.git:
    repo: https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/snowflake.git
    dest: "{{ snowflake_repo_dir }}"
    version: "{{ __version }}"
    force: true
  register: __repo

- name: Apply snowflake_patches
  become: true
  become_user: snowflake
  ansible.builtin.shell: |
    cd {{ snowflake_repo_dir }}
    curl -s {{ item }} | patch -p 1
  loop_control:
    label: "{{ item }}"
  loop: "{{ snowflake_patches }}"
  when: ansible_facts.hostname in snowflake_patched_systems
  register: __patch

- name: Go get
  become: true
  become_user: snowflake
  ansible.builtin.command: "{{ snowflake_go_path }} get"
  args:
    chdir: "{{ snowflake_repo_dir }}/proxy"
  when: __repo.changed or __patch.changed

- name: Go build
  become: true
  become_user: snowflake
  ansible.builtin.command: "{{ snowflake_go_path }} build"
  args:
    chdir: "{{ snowflake_repo_dir }}/proxy"

- name: Copy binary file to /usr/bin/
  ansible.builtin.copy:
    src: "{{ snowflake_repo_dir }}/proxy/proxy"
    dest: /usr/bin/
    mode: a+x
    remote_src: yes
  register: __proxy

- name: Set sysctl value
  ansible.posix.sysctl:
    name: user.max_user_namespaces
    value: "2" # 1 is too low: https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/snowflake/-/issues/40287
    sysctl_file: /etc/sysctl.d/21tor-snowflake.conf
    sysctl_set: true

- name: Add unit systemd
  ansible.builtin.copy:
    src: snowflake-proxy.service
    dest: /etc/systemd/system/snowflake-proxy.service
  register: __service

- name: Restart service snowflake-proxy
  ansible.builtin.service:
    name: snowflake-proxy
    state: restarted
    daemon_reload: true
    enabled: yes
  when: __proxy.changed or __service.changed
