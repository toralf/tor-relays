---
- name: Install or update toolchain for kernel build
  when: not ansible_check_mode
  ansible.builtin.apt:
    name:
      - bc
      - bison
      - build-essential
      - cpio
      - dwarves
      - flex
      - git
      - kmod
      - libelf-dev
      - libncurses5-dev
      - libssl-dev

- name: Init or update repo of Linux
  when: not ansible_check_mode
  ansible.builtin.git:
    repo: "{{ kernel_git_repo }}"
    dest: "{{ kernel_git_repo_dir }}"
    version: "{{ kernel_git_version }}"
    bare: true
    force: true

- name: "Create or update {{ kernel_git_revision }}"
  when: not ansible_check_mode
  ansible.builtin.shell:
    cmd: |
      git archive "{{ kernel_git_revision }}" --prefix linux-"{{ kernel_git_revision }}/" |
        (cd /usr/src/; sudo tar -xf-)
    chdir: "{{ kernel_git_repo_dir }}"

- name: Apply patches
  ansible.builtin.shell:
    cmd: |
      curl -s {{ item }} |
        patch -p 1
    chdir: "/usr/src/linux-{{ kernel_git_revision }}/"
  loop_control:
    label: "{{ item }}"
  loop: "{{ kernel_git_patches }}"

- name: "Build Linux {{ kernel_git_revision }}"
  when: not ansible_check_mode
  ansible.builtin.shell:
    cmd: |
      set -e

      yes '' | make localmodconfig
      sed -i -e 's,^# CONFIG_LOCALVERSION_AUTO is not set$,CONFIG_LOCALVERSION_AUTO=y,' .config

      make -j {{ 1 + (ansible_facts.memtotal_mb / 2048) | int }}
      make install
      make modules_install
      update-initramfs -u
      touch /var/run/reboot-required
    chdir: "/usr/src/linux-{{ kernel_git_revision }}/"
