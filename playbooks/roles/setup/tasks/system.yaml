---
- name: Create Ansible tmp dir for user root
  ansible.builtin.file:
    path: /root/.ansible/tmp
    state: directory
    mode: "0700"

- name: Configure repository "backports"
  ansible.builtin.apt_repository:
    filename: "backports"
    repo: "deb http://deb.debian.org/debian {{ ansible_facts.distribution_release }}-backports main"

# https://www.debian.org/releases/bookworm/arm64/release-notes/ch-information.html#non-free-split
- name: Configure apt hook for non-free firmware
  ansible.builtin.lineinfile:
    line: 'APT::Get::Update::SourceListWarnings::NonFreeFirmware "false";'
    path: /etc/apt/apt.conf.d/no-bookworm-firmware.conf
    create: yes

- name: Upgrade distribution
  ansible.builtin.apt:
    upgrade: dist

- name: Install or update base software
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - gpg
      - gpg-agent
      - ntp
      - unattended-upgrades

- name: Install or update additional software
  ansible.builtin.apt:
    name: "{{ additional_software }}"

- name: Configure auto upgrades
  ansible.builtin.copy:
    src: 20auto-upgrades
    dest: /etc/apt/apt.conf.d/

- name: Configure unattended upgrades
  ansible.builtin.copy:
    src: 50unattended-upgrades
    dest: /etc/apt/apt.conf.d/

- name: Sysctl config
  ansible.builtin.copy:
    src: 20tor-system.conf
    dest: /etc/sysctl.d/
  register: _sysctl_state

- name: "Ensure sysctl is reloaded"
  changed_when: true
  ansible.builtin.command:
    argv: ["sysctl", "--system"]
  when: _sysctl_state.changed

- name: Tweak readline
  ansible.builtin.lineinfile:
    line: "set enable-bracketed-paste off"
    path: /root/.inputrc
    create: yes

- name: Htop config
  ansible.builtin.copy:
    src: htoprc
    dest: /root/.config/htop/

- name: Preserve old network device naming schema
  ansible.builtin.lineinfile:
    create: no
    line: 'GRUB_CMDLINE_LINUX="net.ifnames=0"'
    path: /etc/default/grub
    regex: "^GRUB_CMDLINE_LINUX="
  register: _grub
  tags:
    - never
    - system-grub

- name: Regenerate grub menue
  ansible.builtin.command: "update-grub"
  when: _grub.changed
  tags:
    - never
    - system-grub

- name: Ensure kernel crash dumps are made to /tmp
  ansible.builtin.cron:
    name: "core debug files"
    special_time: reboot
    job: "echo '/tmp/core.\\%e.\\%p.\\%s.\\%t' > /proc/sys/kernel/core_pattern"

- name: Check if reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: _stat_reboot

- name: Reboot into newer kernel if needed
  ansible.builtin.reboot:
    connect_timeout: 5
    reboot_timeout: 120
    pre_reboot_delay: 0
    post_reboot_delay: 35
  when: _stat_reboot.stat.exists
