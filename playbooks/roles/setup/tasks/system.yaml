---
- name: Create Ansible tmp dir for user root
  ansible.builtin.file:
    path: /root/.ansible/tmp
    state: directory
    mode: "0700"

# https://www.debian.org/releases/bookworm/arm64/release-notes/ch-information.html#non-free-split
- name: Configure apt hook for non-free firmware
  ansible.builtin.lineinfile:
    line: 'APT::Get::Update::SourceListWarnings::NonFreeFirmware "false";'
    path: /etc/apt/apt.conf.d/no-bookworm-firmware.conf
    create: yes

- name: Upgrade Dist
  ansible.builtin.apt:
    force_apt_get: true
    update_cache: true
    upgrade: dist

- name: Install needed software
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - gpg
      - gpg-agent
      - iptables
      - iptables-persistent
      - ntp
      - unattended-upgrades

- name: Configure auto upgrades
  ansible.builtin.copy:
    src: 20auto-upgrades
    dest: /etc/apt/apt.conf.d/

- name: Configure unattended upgrades
  ansible.builtin.copy:
    src: 50unattended-upgrades
    dest: /etc/apt/apt.conf.d/

- name: Sysctl config
  ansible.builtin.copy:
    src: 20tor-relay.conf
    dest: /etc/sysctl.d/
  register: sysctl_state

- name: "Ensure sysctl is reloaded"
  changed_when: true
  ansible.builtin.command:
    argv: ["sysctl", "--system"]
  when: sysctl_state.changed

- name: Tweak readline
  ansible.builtin.lineinfile:
    line: "set enable-bracketed-paste off"
    path: /root/.inputrc
    create: yes

- name: Htop config
  ansible.builtin.copy:
    src: htoprc
    dest: /root/.config/htop/

- name: Preserve old network device naming schema
  ansible.builtin.lineinfile:
    create: no
    line: 'GRUB_CMDLINE_LINUX="net.ifnames=0"'
    path: /etc/default/grub
    regex: "^GRUB_CMDLINE_LINUX="
  register: _grub
  tags:
    - never
    - system-grub

- name: Regenerate grub menue
  ansible.builtin.command: "update-grub"
  when: _grub.changed
  tags:
    - never
    - system-grub

- name: Ensure kernel crash dumps are made to /tmp
  ansible.builtin.cron:
    name: "core debug files"
    special_time: reboot
    job: "echo '/tmp/core.\\%e.\\%p.\\%s.\\%t' > /proc/sys/kernel/core_pattern"

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Get current running kernel version
  changed_when: false
  check_mode: false
  ansible.builtin.shell: |
    uname -v | grep -Eo '(Debian .*) ' | awk '{ print $2 }'
    uname -r | cut -f 3 -d '-'
  register: _uname
  failed_when: _uname.stdout_lines | length != 2 or _uname.stderr_lines | length > 0

- name: Reboot into newer kernel if needed
  ansible.builtin.reboot:
    connect_timeout: 5
    reboot_timeout: 120
    pre_reboot_delay: 0
    post_reboot_delay: 35
  when: not _uname.stdout_lines[0] == ansible_facts.packages[linux_image_arch][0].version
  vars:
    linux_image_arch: "linux-image-{{ _uname.stdout_lines[1] }}"
