---
- name: Install or update Nginx
  when: not ansible_check_mode
  ansible.builtin.apt:
    name:
      - nginx
  notify: "Restart Nginx"

- name: Generate host private key
  delegate_to: localhost
  community.crypto.openssl_privatekey:
    path: "{{ ssl_dir }}/keys/{{ inventory_hostname }}.key"

- name: Generate host CSR
  delegate_to: localhost
  community.crypto.openssl_csr:
    path: "{{ ssl_dir }}/csrs/{{ inventory_hostname }}.csr"
    privatekey_path: "{{ ssl_dir }}/keys/{{ inventory_hostname }}.key"
    common_name: "{{ inventory_hostname }}"
    country_name: "DE"
    subject_alt_name:
      - "DNS:{{ inventory_hostname }}"
      - "IP:{{ ansible_facts.default_ipv4.address }}"
      - "IP:{{ ansible_facts.default_ipv6.address }}"
    key_usage:
      - digitalSignature
      - nonRepudiation
      - keyEncipherment
      - dataEncipherment

- name: Generate host certificate
  when: not ansible_check_mode
  delegate_to: localhost
  community.crypto.x509_certificate:
    path: "{{ ssl_dir }}/certs/{{ inventory_hostname }}.crt"
    csr_path: "{{ ssl_dir }}/csrs/{{ inventory_hostname }}.csr"
    ownca_path: "{{ ssl_dir }}/certs/CA.crt"
    ownca_privatekey_path: "{{ ssl_dir }}/keys/CA.key"
    provider: ownca

- name: Copy host key
  when: not ansible_check_mode
  ansible.builtin.copy:
    src: "{{ ssl_dir }}/keys/{{ inventory_hostname }}.key"
    dest: /etc/nginx/conf.d/
  notify: "Restart Nginx"

- name: Copy host certificate
  when: not ansible_check_mode
  ansible.builtin.copy:
    content: "{{
      lookup('file','{{ ssl_dir }}/certs/{{ inventory_hostname }}.crt')+'\n'+
      lookup('file','{{ ssl_dir }}/certs/CA.crt')+'\n'
      }}"
    dest: "/etc/nginx/conf.d/{{ inventory_hostname }}.crt"
  notify: "Restart Nginx"

- name: Configure Nginx
  ansible.builtin.template:
    src: metrics.conf.j2
    dest: /etc/nginx/conf.d/metrics.conf
    mode: "0644"
  notify: "Restart Nginx"

- name: Remove Nginx default listener
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: "Restart Nginx"
