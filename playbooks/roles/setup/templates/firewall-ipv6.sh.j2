#!/usr/bin/env bash
#set -x
# {{ ansible_managed }}

function clearAll() {
  $ipt -P INPUT ACCEPT
  $ipt -P OUTPUT ACCEPT

  for table in filter nat; do
    $ipt -F -t $table
    $ipt -X -t $table
    $ipt -Z -t $table
  done
}

function addRules() {
  $ipt -P INPUT DROP
  $ipt -P OUTPUT ACCEPT

  # allow loopback
  $ipt -A INPUT --in-interface lo -j ACCEPT

  # IPv6 Multicast
  $ipt -A INPUT -p udp --source fe80::/10 --dst ff02::/80 -j ACCEPT

  # make sure NEW incoming tcp connections are SYN packets
  $ipt -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
  $ipt -A INPUT -m conntrack --ctstate INVALID -j DROP

  # do not touch established connections
  $ipt -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

  # ssh
  $ipt -A INPUT -p tcp --dport 22 --syn -j ACCEPT

  # ratelimit ICMP echo
  $ipt -A INPUT -p ipv6-icmp --icmpv6-type echo-request -m limit --limit 6/s -j ACCEPT
  $ipt -A INPUT -p ipv6-icmp --icmpv6-type echo-request -j DROP
  $ipt -A INPUT -p ipv6-icmp -j ACCEPT

  # DHCPv6
  $ipt -A INPUT -p udp --dport 546 -j ACCEPT

  # additional ports
{% for __i in additional_ports %}
{% if ',' in __i or ':' in __i %}
  $ipt -A INPUT -p tcp --dst {{ ansible_facts.default_ipv6.address }} --match multiport --dports {{ __i }} --syn -m hashlimit --hashlimit-mode srcip,dstport --hashlimit-srcmask 80 --hashlimit-name port6-{{ __i }} --hashlimit-above 6/minute --hashlimit-burst 1 --hashlimit-htable-expire {{ 2 * 60 * 1000 }} -j DROP
  $ipt -A INPUT -p tcp --dst {{ ansible_facts.default_ipv6.address }} --match multiport --dports {{ __i }} --syn -j ACCEPT
{% else %}
  $ipt -A INPUT -p tcp --dst {{ ansible_facts.default_ipv6.address }} --dport {{ __i }} --syn -m hashlimit --hashlimit-mode srcip,dstport --hashlimit-srcmask 80 --hashlimit-name port6-{{ __i }} --hashlimit-above 6/minute --hashlimit-burst 1 --hashlimit-htable-expire {{ 2 * 60 * 1000 }} -j DROP
  $ipt -A INPUT -p tcp --dst {{ ansible_facts.default_ipv6.address }} --dport {{ __i }} --syn -j ACCEPT
{% endif %}
{% endfor %}
}

#######################################################################
set -euf

ipt=ip6tables

trap clearAll INT QUIT TERM EXIT
if [[ $1 == "start" ]]; then
  clearAll
  addRules
else
  $1
fi
trap - INT QUIT TERM EXIT
