#!/bin/bash
#set -x
# shellcheck disable=SC1000-SC9999
# {{ ansible_managed }}

function clearAll() {
  iptables -P INPUT ACCEPT
  iptables -P OUTPUT ACCEPT

  iptables -F
  iptables -X
  iptables -Z
}

function addRules() {
  iptables -P INPUT DROP
  iptables -P OUTPUT ACCEPT

  # allow loopback
  iptables -A INPUT --in-interface lo -m comment --comment "$(date -R)" -j ACCEPT

  # make sure NEW incoming tcp connections are SYN packets
  iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
  iptables -A INPUT -m conntrack --ctstate INVALID -j DROP

  # do not touch established connections
  iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

  # ssh
  iptables -A INPUT -p tcp --dst {{ ansible_facts.default_ipv4.address }} --dport 22 --syn -j ACCEPT

  # ratelimit ICMP echo
  iptables -A INPUT -p icmp --icmp-type echo-request -m limit --limit 6/s -j ACCEPT
  iptables -A INPUT -p icmp --icmp-type echo-request -j DROP

  {% for __i in additional_ports %}
  {% if ',' in __i or ':' in __i %}
  iptables -A INPUT -p tcp --dst {{ ansible_facts.default_ipv4.address }} --match multiport --dports {{ __i }} --syn -j ACCEPT
  {% else %}
  iptables -A INPUT -p tcp --dst {{ ansible_facts.default_ipv4.address }} --dport {{ __i }} --syn -j ACCEPT
  {% endif %}
  {% endfor %}
}

set -euf

if [[ $1 == "start" ]]; then
  clearAll
  addRules
fi
