---
# update starts at hh:02, # upgrade starts between hh:10 and hh:30, possible reboot between hh:35 and hh:58

- name: Install or update base software for auto-update
  ansible.builtin.apt:
    name:
      - unattended-upgrades

- name: Configure needrestart
  ansible.builtin.lineinfile:
    line: "$nrconf{restart} = 'a';"
    path: /etc/needrestart/conf.d/auto-restart.conf

- name: Configure unattended auto upgrade
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/apt/apt.conf.d/
  with_items:
    - 20auto-upgrades
    - 50unattended-upgrades
  notify: "Reload Systemd"

- name: Create timer.d directories
  ansible.builtin.file:
    state: directory
    path: "/etc/systemd/system/{{ item }}"
    mode: "0755"
  with_items:
    - "apt-daily.timer.d/"
    - "apt-daily-upgrade.timer.d/"

# 2x per day at :02
- name: Configure apt timer
  ansible.builtin.template:
    src: timer.j2
    dest: /etc/systemd/system/apt-daily.timer.d/override.conf
  notify: "Reload Systemd"

# 2x per day at :10
- name: Configure apt upgrade timer
  ansible.builtin.template:
    src: upgrade.j2
    dest: /etc/systemd/system/apt-daily-upgrade.timer.d/override.conf
  notify: "Reload Systemd"

# 2x per day between: :30 and :55
- name: Ensure reboot cron job is present
  ansible.builtin.cron:
    name: "Reboot if services can't be safely restarted and/or kernel was updated"
    hour: "{{ timer_hour }},{{ 12 + timer_hour | int }}"
    minute: "{{ 30 + 25 | random(seed=seed_host) }}"
    job: >-
      "
      if [[ -s /var/run/reboot-required ]] ||
      needrestart -r l -b | grep -q -e 'NEEDRESTART-KSTA: 2' -e 'NEEDRESTART-KSTA: 3' -e 'NEEDRESTART-SVC:'
      ; then
      reboot
      ;
      fi
      "

# 2x per day one hour after :13
- name: Ensure reaper cron job is present
  ansible.builtin.cron:
    name: "Reap a hanging apt process"
    hour: "{{ 1 + timer_hour | int }},{{ (13 + timer_hour | int) % 24 }}"
    minute: "13"
    job: 'pkill -f "apt-get -qq -y update"'
