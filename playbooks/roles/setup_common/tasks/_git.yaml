---
- name: Check "{{ _repo_dir }}"
  ansible.builtin.git:
    repo: "{{ _git_repo_url }}"
    dest: "{{ _repo_dir }}"
    clone: false
    update: false
  register: __new

- name: Git clone/update"{{ _repo_dir }}"
  throttle: 20
  block:
    - name: New clone "{{ _repo_dir }}"
      throttle: 8
      when: __new.before == "null"
      block:
        - name: Shallow clone "{{ _repo_dir }}"
          ansible.builtin.git:
            repo: "{{ _git_repo_url }}"
            dest: "{{ _repo_dir }}"
            version: "{{ _git_version }}"
            force: true
            depth: 1
            single_branch: true
          register: __shallow_clone

        - name: Single branch "{{ _repo_dir }}"
          ansible.builtin.git:
            repo: "{{ _git_repo_url }}"
            dest: "{{ _repo_dir }}"
            version: "{{ _git_version }}"
            force: true
            single_branch: true
          register: __single_branch

    - name: Update "{{ _repo_dir }}"
      ansible.builtin.git:
        repo: "{{ _git_repo_url }}"
        dest: "{{ _repo_dir }}"
        version: "{{ _git_version }}"
        force: true
        clone: false
      register: __updated

    - name: Remove untracked files "{{ _repo_dir }}"
      changed_when: __cleaned.stdout
      ansible.builtin.command:
        cmd: git clean --force
        chdir: "{{ _repo_dir }}"
      register: __cleaned

    - name: Apply patches "{{ _repo_dir }}"
      when: _git_patches
      changed_when: __patched.stdout_lines is search('patching file ')
      ansible.builtin.shell:
        cmd: |-
          set -euf

          rm -f tmp.patch
          curl -s {{ item }} -o tmp.patch
          patch -p 1 <tmp.patch
          rm tmp.patch
        chdir: "{{ _repo_dir }}"
      loop: "{{ _git_patches }}"
      register: __patched

- name: Get current HEAD commit id "{{ _repo_dir }}"
  ansible.builtin.git:
    repo: "{{ _git_repo_url }}"
    dest: "{{ _repo_dir }}"
    clone: false
    update: false
  register: _git_head

- name: Set update status "{{ _repo_dir }}"
  ansible.builtin.set_fact:
    _git_repo_changed: "{{
      __shallow_clone is defined and __shallow_clone.changed or
      __single_branch is defined and __single_branch.changed or
      __updated.changed or __cleaned.changed or __patched.changed or
      force_rebuild is defined and force_rebuild | bool
      }}"
