---
- name: Check for a pseudo-random choosen ipv6 address
  failed_when: _ipv6_new != ansible_facts.default_ipv6.address
  vars:
    __ipv6_prefix: "{{ (ansible_facts.default_ipv6.address | split(':'))[:4] | join(':') }}"
    __a: "{{ (ansible_facts.default_ipv6.address | split(':'))[4] | default('0') }}"
    __b: "{{ range(0, 65535) | random(seed=seed_address + inventory_hostname + ansible_facts.default_ipv4.address + 'B' + __ipv6_prefix) }}"
    __c: "{{ range(0, 65535) | random(seed=seed_address + inventory_hostname + ansible_facts.default_ipv4.address + 'C' + __ipv6_prefix) }}"
    __d: "{{ range(0, 65535) | random(seed=seed_address + inventory_hostname + ansible_facts.default_ipv4.address + 'D' + __ipv6_prefix) }}"
    _ipv6_new: "{{ __ipv6_prefix }}:{{ '%x' % (__a | int) }}:{{ '%x' % (__b | int) }}:{{ '%x' % (__c | int) }}:{{ '%x' % (__d | int) }}"
  ansible.builtin.debug:
    msg:
      - "expected: {{ _ipv6_new }}"
      - "current:  {{ ansible_facts.default_ipv6.address }}"
      - "ssh {{ inventory_hostname }} 'service systemd-networkd restart; sleep 3; ip a'"
