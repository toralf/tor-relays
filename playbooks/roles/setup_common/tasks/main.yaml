---
# Hint: facts cache is not updated if --tags or --limit is used, so use "--tags facts" if needed
- name: Gather facts - subset
  ansible.builtin.setup:
    gather_subset:
      - "!all"
      - "!min"
      - all_ipv4_addresses
      - all_ipv6_addresses
      - architecture
      - default_ipv4
      - default_ipv6
      - distribution
      - hardware
  tags:
    - facts

- name: Validate
  ansible.builtin.import_tasks: validate.yaml
  tags:
    - validate

- name: Main
  module_defaults:
    ansible.builtin.apt:
      allow_change_held_packages: true
      autoclean: true
      autoremove: true
      cache_valid_time: 600
      purge: true
      state: latest
    ansible.builtin.apt_repository:
      update_cache: false
    ansible.builtin.copy:
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.cron:
      backup: true
    ansible.builtin.file:
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.lineinfile:
      create: true
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.stat:
      get_attributes: false
      get_checksum: false
      get_mime: false
    ansible.builtin.systemd_service:
      daemon_reload: true
      enabled: true
    ansible.builtin.template:
      owner: root
      group: root
      mode: "0644"
  block:
    - name: Run a custom command
      when: custom_command
      ansible.builtin.import_tasks: custom-command.yaml
      tags:
        - custom-command

    - name: Base
      ansible.builtin.import_tasks: base.yaml
      tags:
        - base

    - name: IPv6
      tags:
        - ipv6
      block:
        - name: IPv6 Hetzner
          when: ansible_facts.system_vendor == 'Hetzner'
          ansible.builtin.import_tasks: ipv6-hetzner.yaml

        - name: IPv6 IONOS
          when: ansible_facts.system_vendor == 'QEMU'
          ansible.builtin.import_tasks: ipv6-ionos.yaml

        - name: Ensure IPv6 address is global scope
          failed_when: ansible_facts.default_ipv6.address is match('fe80::')
          ansible.builtin.debug:
            var: ansible_facts.default_ipv6
            verbosity: 1

    - name: Firewall
      ansible.builtin.import_tasks: firewall.yaml
      tags:
        - firewall

    - name: System config
      ansible.builtin.import_tasks: system-config.yaml
      tags:
        - system-config

    - name: Upgrade
      ansible.builtin.import_tasks: upgrade.yaml
      tags:
        - upgrade

    - name: Distribution kernel
      ansible.builtin.import_tasks: kernel-dist.yaml
      tags:
        - kernel
        - kernel-dist

    - name: Self-compiled kernel
      when: kernel_git_version
      ansible.builtin.import_tasks: kernel-src.yaml
      tags:
        - kernel
        - kernel-src

    - name: Nginx
      ansible.builtin.import_tasks: nginx.yaml
      tags:
        - nginx

    - name: Prometheus Node Exporter
      when: node_metrics
      ansible.builtin.import_tasks: node-exporter.yaml
      tags:
        - node-exporter

    - name: Catch async kernel build job
      tags:
        - kernel
        - kernel-src
      when: _kernel_build.changed
      block:
        - name: Wait till kernel build finished
          when: not fire_and_forget | bool
          ansible.builtin.async_status:
            jid: "{{ _kernel_build.ansible_job_id }}"
          register: _job_result
          until: _job_result.finished
          retries: 75
          delay: 60
          notify: Reboot system

        - name: Cleanup kernel build async job
          ansible.builtin.async_status:
            jid: "{{ _kernel_build.ansible_job_id }}"
            mode: cleanup

    - name: Explicit check if reboot is needed
      ansible.builtin.import_tasks: reboot.yaml
      tags:
        - reboot
