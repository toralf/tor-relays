---
- name: Gather facts
  ansible.builtin.setup:
    gather_subset: "{{ facts_subset }}"
  tags:
    - facts

- name: Validate
  ansible.builtin.import_tasks: validate.yaml
  tags:
    - validate

- name: Main
  module_defaults:
    ansible.builtin.apt:
      autoclean: true
      autoremove: true
      cache_valid_time: 600
      purge: true
      state: latest
    ansible.builtin.apt_repository:
      update_cache: false
    ansible.builtin.copy:
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.cron:
      backup: true
    ansible.builtin.file:
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.lineinfile:
      create: true
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.stat:
      get_attributes: false
      get_checksum: false
      get_mime: false
    ansible.builtin.systemd_service:
      daemon_reload: true
      enabled: true
    ansible.builtin.template:
      owner: root
      group: root
      mode: "0644"
  block:
    - name: Base
      ansible.builtin.import_tasks: base.yaml
      tags:
        - base

    - name: Run a custom command
      when: custom_command
      ansible.builtin.import_tasks: custom-command.yaml
      tags:
        - custom-command

    - name: IPv6
      when: not is_a_snapshot_image
      tags:
        - ipv6
      block:
        - name: IPv6 Hetzner
          when: ansible_facts.system_vendor == 'Hetzner'
          ansible.builtin.import_tasks: ipv6-hetzner.yaml

        - name: IPv6 IONOS
          when: ansible_facts.system_vendor == 'QEMU'
          ansible.builtin.import_tasks: ipv6-ionos.yaml

        - name: Ensure IPv6 address is global scope
          failed_when: ansible_facts.default_ipv6.address is match('fe80::')
          ansible.builtin.debug:
            var: ansible_facts.default_ipv6
            verbosity: 1

    - name: Firewall
      ansible.builtin.import_tasks: firewall.yaml
      tags:
        - firewall

    - name: Update
      when: ansible_facts.distribution in ('Debian', 'Ubuntu')
      ansible.builtin.import_tasks: update.yaml
      tags:
        - update

    - name: System config
      ansible.builtin.import_tasks: system-config.yaml
      tags:
        - system-config

    - name: Distribution kernel
      tags:
        - kernel
        - kernel-dist
      block:
        - name: Ensure desired distribution kernel is installed
          ansible.builtin.import_tasks: kernel-dist.yaml

        - name: Check if reboot is needed (after dist kernel)
          ansible.builtin.import_tasks: reboot.yaml

    - name: Ensure service restarts and/or needed reboot is made
      ansible.builtin.meta: flush_handlers

    - name: Self-compiled kernel
      when: kernel_git_version
      ansible.builtin.import_tasks: kernel-src.yaml
      tags:
        - kernel
        - kernel-src

    - name: Nginx
      when: nginx_listener_default or metrics_port
      ansible.builtin.import_tasks: nginx.yaml
      tags:
        - nginx

    - name: Prometheus Node Exporter
      when: node_metrics
      ansible.builtin.import_tasks: node-exporter.yaml
      tags:
        - node-exporter

    - name: Handle kernel build job
      tags:
        - kernel
      when: _kernel_build.changed
      block:
        - name: Wait till kernel build finished
          when: not fire_and_forget
          ansible.builtin.async_status:
            jid: "{{ _kernel_build.ansible_job_id }}"
          register: _job_result
          until: _job_result.finished
          retries: 120
          delay: 30
          notify: "Reboot system"

        - name: Cleanup kernel build async job
          ansible.builtin.async_status:
            jid: "{{ _kernel_build.ansible_job_id }}"
            mode: cleanup

    - name: Configure auto update
      when: not is_a_snapshot_image and ansible_facts.distribution in ('Debian', 'Ubuntu')
      ansible.builtin.import_tasks: auto-update.yaml
      tags:
        - auto-update

    - name: Explicit check if reboot is needed
      ansible.builtin.import_tasks: reboot.yaml
      tags:
        - reboot
