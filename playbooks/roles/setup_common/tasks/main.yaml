---
- name: Gather facts
  ansible.builtin.setup:
    gather_subset: "{{ facts_subset }}"
  tags:
    - always

- name: Validate
  ansible.builtin.import_tasks: validate.yaml
  tags:
    - validate

- name: Main
  module_defaults:
    ansible.builtin.apt:
      autoclean: true
      autoremove: true
      cache_valid_time: 600
      purge: true
      state: latest
    ansible.builtin.copy:
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.cron:
      backup: yes
    ansible.builtin.file:
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.lineinfile:
      create: yes
      owner: root
      group: root
      mode: "0644"
    ansible.builtin.stat:
      get_attributes: false
      get_checksum: false
      get_mime: false
    ansible.builtin.systemd_service:
      daemon_reload: true
      enabled: true
    ansible.builtin.template:
      owner: root
      group: root
      mode: "0644"
  block:
    - name: Base
      ansible.builtin.import_tasks: base.yaml
      tags:
        - base

    - name: Update
      ansible.builtin.import_tasks: update.yaml
      tags:
        - update

    - name: IPv6 Hetzner
      when: ansible_facts.system_vendor == 'Hetzner'
      ansible.builtin.import_tasks: ipv6-hetzner.yaml
      tags:
        - ipv6

    - name: IPv6 IONOS
      when: ansible_facts.system_vendor == 'QEMU'
      ansible.builtin.import_tasks: ipv6-ionos.yaml
      tags:
        - ipv6

    - name: Ensure Ipv6 address is global scope and non-default
      failed_when: ansible_facts.default_ipv6.address is match('fe80::') or ansible_facts.default_ipv6.address is search('::1$')
      ansible.builtin.debug:
        var: ansible_facts.default_ipv6
        verbosity: 1
      tags:
        - ipv6

    - name: Firewall
      when: firewall_base_config
      ansible.builtin.import_tasks: firewall.yaml
      tags:
        - firewall

    - name: Kernel
      tags:
        - kernel
      block:
        - name: Ensure cloud kernel is installed
          ansible.builtin.import_tasks: kernel.yaml

        - name: Ensure cloud kernel is running
          ansible.builtin.meta: flush_handlers

        - name: Build kernel from source
          when: kernel_git_version
          ansible.builtin.import_tasks: kernel-src.yaml
          tags:
            - kernel-src

        - name: Ensure built kernel is running
          when: kernel_git_version
          ansible.builtin.meta: flush_handlers

    - name: CA
      ansible.builtin.import_tasks: ca.yaml
      tags:
        - ca
        - never

    - name: Metrics
      when: metrics_port
      ansible.builtin.import_tasks: metrics.yaml
      tags:
        - metrics
        - metrics-common

    - name: Configure auto update
      ansible.builtin.import_tasks: auto-update.yaml
      tags:
        - auto-update

    - name: Check if reboot is needed
      ansible.builtin.import_tasks: reboot.yaml
      tags:
        - reboot
