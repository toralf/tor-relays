---
- name: Stats of make.log
  ansible.builtin.stat:
    path: /root/make.log
  register: _make_log

- name: Self-compiled kernel
  when: not _make_log.stat.exists or _age | int > 60
  vars:
    _age: "{{ now(utc=true, fmt='%s') | float - _make_log.stat.atime }}"
  block:
    - name: Install/Update toolchain
      ansible.builtin.apt:
        name:
          - bc
          - bison
          - build-essential
          - cpio
          - dwarves
          - flex
          - git
          - kmod
          - libelf-dev
          - libncurses5-dev
          - libssl-dev
          - lz4

    - name: Create swap file for small VPS to give GCC (at least virtually) 2 GiB RAM
      when: ansible_facts.memtotal_mb < 2048
      ansible.builtin.shell:
        cmd: |-
          set -euf

          fallocate -l 2G /swapfile
          chmod 600 /swapfile
          mkswap /swapfile
          if ! grep -q "^/swapfile " /etc/fstab; then
            echo "/swapfile  none  swap  defaults  0  0" >>/etc/fstab
          fi
          swapon /swapfile
        creates: /swapfile

    - name: Init or update Linux repo
      retries: 3
      ansible.builtin.git:
        repo: "{{ kernel_git_repo_url }}"
        dest: /root/linux
        version: "{{ kernel_git_version }}"
        force: true
        depth: 1
        single_branch: true
      register: _kernel_repo

    - name: Clean Linux repo
      changed_when: false
      ansible.builtin.command:
        cmd: git clean -f
        chdir: /root/linux

    - name: Apply patches for Linux
      retries: 3
      changed_when: _kernel_patched.stdout_lines is search('patching file ')
      ansible.builtin.shell:
        cmd: |-
          set -euf

          curl -s {{ item }} -o /root/kernel.patch && patch -p 1 </root/kernel.patch
        chdir: /root/linux
        executable: /bin/bash
      loop_control:
        label: "{{ item }}"
      loop: "{{ kernel_git_patches }}"
      register: _kernel_patched

    - name: Configure Linux
      changed_when: _kernel_configured.rc == 123
      failed_when: _kernel_configured.rc != 0 and _kernel_configured.rc != 123
      ansible.builtin.shell:
        cmd: |-
          set -euf

          [[ -s .config ]] && before=$(md5sum .config) || before="0"

          # force module loading
          conntrack -C

          yes '' | make localmodconfig >/dev/null

          cat <<EOF >>.config
          # Debian / generic

          CONFIG_LOCALVERSION=""
          CONFIG_LOCALVERSION_AUTO=y

          PROC_MEM_ALWAYS_FORCE=n
          PROC_MEM_FORCE_PTRACE=n
          PROC_MEM_NO_FORCE=y

          CONFIG_BPF=n

          CONFIG_NETFILTER_EGRESS=n
          CONFIG_NETFILTER_INGRESS=n
          CONFIG_NF_CT_PROTO_DCCP=n
          CONFIG_NF_CT_PROTO_SCTP=n
          CONFIG_NF_CT_PROTO_UDPLITE=n
          CONFIG_NF_TABLES_ARP=n
          CONFIG_NF_TABLES_NETDEV=n

          CONFIG_IP_NF_FILTER=m
          CONFIG_IP_NF_IPTABLES=m
          CONFIG_IP_NF_NAT=m
          CONFIG_IP_SET=m
          CONFIG_IP_SET_HASH_IP=m'
          CONFIG_IP6_NF_FILTER=m
          CONFIG_IP6_NF_IPTABLES=m
          CONFIG_IP6_NF_NAT=m
          CONFIG_NETFILTER_XT_MATCH_COMMENT=m
          CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=m
          CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
          CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
          CONFIG_NETFILTER_XT_MATCH_LIMIT=m
          CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
          CONFIG_NETFILTER_XT_MATCH_STATE=m
          CONFIG_NETFILTER_XT_NAT=m
          CONFIG_NETFILTER_XT_SET=m
          CONFIG_NF_CONNTRACK=m
          CONFIG_NF_CT_NETLINK=m
          CONFIG_NF_NAT=m
          CONFIG_NF_TABLES=m
          CONFIG_NF_TABLES_INET=y
          CONFIG_NF_TABLES_IPV4=y
          CONFIG_NF_TABLES_IPV6=y
          CONFIG_NFT_LIMIT=m
          CONFIG_NFT_NAT=m

          # Ubuntu

          CONFIG_SYSTEM_REVOCATION_KEYS=""

          CONFIG_BPF=n
          CONFIG_BPF_SYSCALL=n
          CONFIG_BPF_JIT=n
          CONFIG_BPF_JIT_ALWAYS_ON=n
          CONFIG_BPF_JIT_DEFAULT_ON=n
          CONFIG_PAHOLE_HAS_BTF_TAG=n
          CONFIG_DEBUG_INFO_BTF=n
          CONFIG_DEBUG_INFO_BTF_MODULES=n

          EOF

          yes '' | make oldconfig >/dev/null

          # if current running kernel doesn'o't contain the commit-id of HEAD, then set the Ansible task to "changed"
          if ! uname -r | grep -q "$(git rev-parse --verify HEAD | cut -c -12)"; then
            exit 123
          fi

          # if files do differ, then it has changed
          after=$(md5sum .config)
          if [[ ! $before == $after ]]; then
            exit 123
          fi
        chdir: /root/linux
        executable: /bin/bash
      register: _kernel_configured

    - name: Copy kernel build script
      ansible.builtin.copy:
        src: build-kernel.sh
        dest: /root/
        mode: "0744"
      register: _kernel_build_script

    - name: Build Linux
      async: "{{ (75 * 60) | int }}"
      poll: 0
      when: _kernel_repo.changed or _kernel_patched.changed or _kernel_configured.changed or _kernel_build_script.changed
      changed_when: true
      vars:
        _j: "{{ (ansible_facts.memtotal_mb < 1536) | ternary(1, ansible_facts.processor_vcpus) }}"
      ansible.builtin.command:
        cmd: |-
          {{ fire_and_forget | bool | ternary('nohup /root/build-kernel.sh ' ~ _j ~ ' reboot &', '/root/build-kernel.sh ' ~ _j) }}
      register: _kernel_build
