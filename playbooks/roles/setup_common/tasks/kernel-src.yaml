---
- name: Check for running kernel build process
  community.general.pids:
    name: build-kernel.sh
  register: _build_is_running

- name: Self-compiled kernel
  when: _build_is_running.pids | default([]) | length == 0
  block:
    - name: Install/Update toolchain
      ansible.builtin.apt:
        name:
          - bc
          - bison
          - build-essential
          - cpio
          - dwarves
          - flex
          - kmod
          - libelf-dev
          - libncurses5-dev
          - libssl-dev
          - lz4

    - name: Work on "{{ _repo_dir }}"
      vars:
        _git_repo_url: "{{ kernel_git_repo_url }}"
        _git_version: "{{ kernel_git_version }}"
        _git_patches: "{{ kernel_git_patches }}"
        _repo_dir: /root/linux
      ansible.builtin.include_tasks: "{{ role_path }}/../../../playbooks/roles/lib/_git.yaml"

    - name: Kernel
      when: kernel_git_build in ('nowait', 'yes')
      block:
        - name: Configure kernel
          changed_when: _kernel_configured.rc == 123
          failed_when: _kernel_configured.rc not in (0, 123)
          ansible.builtin.shell:
            cmd: |-
              set -euf

              before=$(grep -v '^#' .config 2>/dev/null | md5sum)

              yes '' | make localmodconfig >/dev/null

              cat <<EOF >>.config
              {{ kernel_git_config }}
              EOF

              yes '' | make oldconfig >/dev/null

              after=$(grep -v '^#' .config | md5sum)
              if [[ $before != $after ]]; then
                exit 123 # marks Ansible task as "changed"
              fi

              exit 0
            chdir: /root/linux
            executable: /bin/bash
          register: _kernel_configured

        - name: Copy kernel build script
          ansible.builtin.copy:
            src: build-kernel.sh
            dest: /root/
            mode: "0744"
          register: _kernel_build_script

        - name: Gather facts - current running kernel
          ansible.builtin.setup:
            gather_subset:
              - hardware

        - name: Build kernel
          when: _git_repo_changed or _kernel_configured.changed or _kernel_build_script.changed or not _latest_is_running
          changed_when: true
          async: "{{ (85 * 60) | int }}"
          poll: 0
          vars:
            _latest_is_running: "{{ ansible_facts.kernel is search(_git_head.before[:12]) }}"
            _max: "{{ 1 + (ansible_facts.memtotal_mb / 1576) | int }}"
            _j: "{{ (_max | int < ansible_facts.processor_vcpus) | ternary(_max, ansible_facts.processor_vcpus) }}"
          ansible.builtin.shell: # noqa: command-instead-of-shell
            cmd: >-
              {{ (kernel_git_build == "nowait") |
              ternary('nohup /root/build-kernel.sh ' ~ _j ~ ' reboot &', '/root/build-kernel.sh ' ~ _j) }}
          register: _kernel_build

        - name: Kernel build
          when: _kernel_build.changed
          block:
            - name: Wait till kernel build finished
              when: kernel_git_build == "yes"
              retries: 85
              delay: 60
              until: _job_result.finished
              ansible.builtin.async_status:
                jid: "{{ _kernel_build.ansible_job_id }}"
              register: _job_result
              notify: Reboot system

            - name: Cleanup kernel build job
              ansible.builtin.async_status:
                jid: "{{ _kernel_build.ansible_job_id }}"
                mode: cleanup
