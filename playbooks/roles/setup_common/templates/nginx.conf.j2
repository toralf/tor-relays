# {{ ansible_managed }}
{% if nginx_public_site %}

server {
  listen {{ ansible_facts.default_ipv4.address }}:80 default_server;
  listen [{{ ansible_facts.default_ipv6.address }}]:80 default_server;

  server_name _80;
  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  location / {
    try_files $uri $uri/ =404;
  }
}
{% endif %}
{% if nginx_public_site or nginx_site_directories %}

server {
  listen {{ ansible_facts.default_ipv4.address }}:443 ssl http2;
  listen [{{ ansible_facts.default_ipv6.address }}]:443 ssl http2;

  ssl_protocols TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_certificate /etc/nginx/conf.d/{{ inventory_hostname }}.crt;
  ssl_certificate_key /etc/nginx/conf.d/{{ inventory_hostname }}.key;
  ssl_conf_command Options KTLS;
  add_header Strict-Transport-Security "max-age=63072000" always;

  server_name _443;
  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  location / {
    try_files $uri $uri/ =404;
  }
{% if nginx_site_directories %}
{% for site in nginx_site_directories %}

  location /{{ site.path }}/ {
    proxy_pass http://127.0.0.1:{{ site.port }}/;
  }
{% endfor %}
{% endif %}
}
{% endif %}
{% if nginx_site_directories %}
{% for site in nginx_site_directories %}

server {
  listen 127.0.0.1:{{ site.port }};

  server_name _{{ site.port }};
  root /var/www/{{ site.path }};

  access_log off;
  error_log /dev/null crit;

  location / {
    autoindex on;
    autoindex_exact_size off;
    autoindex_format html;
    autoindex_localtime on;
  }
}
{% endfor %}
{% endif %}
{% if nginx_metrics %}

server {
  listen 127.0.0.1:8080;

  server_name _8080;
  root /var/www/html;

  stub_status on;
}
{% endif %}
{% if ddos_metrics is defined and ddos_metrics %}

server {
  listen 127.0.0.1:3305;

  server_name _3305;
  root /var/www/html;
  index torutils.prom;

  access_log off;

  proxy_no_cache 1;
  proxy_cache_bypass 1;

  # browser side
  add_header Last-Modified $date_gmt;
  add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
  add_header Pragma "no-cache";
  expires 0;

  location / {
    try_files $uri =404;
  }
}
{% endif %}
{% if metrics_port %}

server {
  listen {{ ansible_facts.default_ipv4.address }}:{{ metrics_port }} ssl http2;
  listen [{{ ansible_facts.default_ipv6.address }}]:{{ metrics_port }} ssl http2;

  ssl_protocols TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_certificate /etc/nginx/conf.d/{{ inventory_hostname }}.crt;
  ssl_certificate_key /etc/nginx/conf.d/{{ inventory_hostname }}.key;
  ssl_conf_command Options KTLS;
  add_header Strict-Transport-Security "max-age=63072000" always;

  server_name _{{ metrics_port }};
  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;
{% if nginx_metrics %}

  location = /metrics-nginx {
    proxy_pass http://127.0.0.1:8080/;
    access_log off;
  }
{% endif %}
{% if node_metrics %}

  location = /metrics-node {
    proxy_pass http://127.0.0.1:9100/metrics;
    access_log off;
  }
{% endif %}
{% if tor_metrics is defined and tor_metrics %}

  location = /metrics-tor {
    proxy_pass http://127.0.0.1:9052/metrics;
    access_log off;
  }
{% endif %}
{% if ddos_metrics is defined and ddos_metrics %}

  location = /metrics-ddos {
    proxy_pass http://127.0.0.1:3305/;
    access_log off;
  }
{% endif %}
{% if snowflake_metrics is defined and snowflake_metrics %}

  location = /metrics-snowflake {
    proxy_pass http://127.0.0.1:9999/internal/metrics;
    access_log off;
  }
{% endif %}
}
{% endif %}
