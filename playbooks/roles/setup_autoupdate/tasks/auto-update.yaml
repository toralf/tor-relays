---
# update starts at hh:02, # upgrade starts between hh:10 and hh:30, possible reboot between hh:35 and hh:58

- name: Install/Update base software for auto-update
  ansible.builtin.apt:
    name:
      - unattended-upgrades

- name: Configure needrestart
  ansible.builtin.lineinfile:
    line: "$nrconf{restart} = 'a';"
    path: /etc/needrestart/conf.d/auto-restart.conf

- name: Configure unattended auto upgrade
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/apt/apt.conf.d/
  with_items:
    - 20auto-upgrades
    - 50unattended-upgrades
  notify: Reload Systemd

- name: Create timer.d directories
  ansible.builtin.file:
    state: directory
    path: "/etc/systemd/system/{{ item }}"
    mode: "0755"
  with_items:
    - apt-daily.timer.d/
    - apt-daily-upgrade.timer.d/

# 2x per day at :02
- name: Configure apt timer
  ansible.builtin.template:
    src: apt_timer.j2
    dest: /etc/systemd/system/apt-daily.timer.d/override.conf
  notify: Reload Systemd

# 2x per day at :10
- name: Configure apt upgrade timer
  ansible.builtin.template:
    src: apt_upgrade.j2
    dest: /etc/systemd/system/apt-daily-upgrade.timer.d/override.conf
  notify: Reload Systemd

# 2x per day one hour later at :13
- name: Ensure reaper cron job is present
  ansible.builtin.cron:
    name: "Reap a hanging apt process"
    hour: "{{ [1 + timer_hour | int, (13 + timer_hour | int) % 24] | sort | join(',') }}"
    minute: 13
    job: >-
      pkill -f "apt-get -qq -y update"

# 2x per day between :30 and :39
- name: Ensure reboot-required cron job is present
  ansible.builtin.cron:
    name: "Reboot if it is required"
    hour: "{{ timer_hour }},{{ 12 + timer_hour | int }}"
    minute: "{{ 30 + 10 | random(seed=seed_host) }}"
    job: >-
      if grep 'System restart required' /var/run/reboot-required 2>/dev/null; then
      pgrep -af 'sshd:' | grep -v '/usr/sbin/sshd' || reboot;
      fi

# 2x per day between :40 and :49
- name: Ensure needrestart cron job is present
  ansible.builtin.cron:
    name: "Reboot if needrestart adviced it"
    hour: "{{ timer_hour }},{{ 12 + timer_hour | int }}"
    minute: "{{ 40 + 10 | random(seed=seed_host) }}"
    job: >-
      if needrestart -r l -b | grep -e 'NEEDRESTART-KSTA: 2' -e 'NEEDRESTART-KSTA: 3' -e 'NEEDRESTART-SVC:'; then
      pgrep -af 'sshd:' | grep -v '/usr/sbin/sshd' || reboot;
      fi
